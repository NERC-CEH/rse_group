name: Pages and Graphviz re-render
on:
  push:
    branches:
    - 'main'
    - '!100_days'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Rebuild graphs and pages 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
    - uses: actions/checkout@v4
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3' # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
        cache-version: 0 # Increment this number if you need to re-download cached gems
        working-directory: '${{ github.workspace }}'
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3
    - name: Build with Jekyll
      # Outputs to the './_site' directory by default
      # Will this copy the diagrams tho
      run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
      env:
        JEKYLL_ENV: production
    - uses: ts-graphviz/setup-graphviz@v2
    - name: Diagrams
      run: chmod +x ./scripts/render_diagrams.sh; bash ./scripts/render_diagrams.sh
    - name: Upload artifact
      # Automatically uploads an artifact from the './_site' directory by default
      uses: actions/upload-pages-artifact@v1
      with:
        path: "_site"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
